//
// File generated by rootcint at Tue Jul  8 12:22:36 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOsl64_gcc447dIobjdIStRootdIStBTofUtildIStBTofUtil_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StBTofUtil_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StBTofNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofNode(void *p = 0);
   static void *newArray_StBTofNode(Long_t size, void *p);
   static void delete_StBTofNode(void *p);
   static void deleteArray_StBTofNode(void *p);
   static void destruct_StBTofNode(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofNode*)
   {
      ::StBTofNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofNode", ::StBTofNode::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StBTofGeometry.h", 98,
                  typeid(::StBTofNode), DefineBehavior(ptr, ptr),
                  &::StBTofNode::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofNode) );
      instance.SetNew(&new_StBTofNode);
      instance.SetNewArray(&newArray_StBTofNode);
      instance.SetDelete(&delete_StBTofNode);
      instance.SetDeleteArray(&deleteArray_StBTofNode);
      instance.SetDestructor(&destruct_StBTofNode);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StBTofNode*)
   {
      return GenerateInitInstanceLocal((::StBTofNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StBTofGeomTray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofGeomTray(void *p = 0);
   static void *newArray_StBTofGeomTray(Long_t size, void *p);
   static void delete_StBTofGeomTray(void *p);
   static void deleteArray_StBTofGeomTray(void *p);
   static void destruct_StBTofGeomTray(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofGeomTray*)
   {
      ::StBTofGeomTray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofGeomTray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofGeomTray", ::StBTofGeomTray::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StBTofGeometry.h", 177,
                  typeid(::StBTofGeomTray), DefineBehavior(ptr, ptr),
                  &::StBTofGeomTray::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofGeomTray) );
      instance.SetNew(&new_StBTofGeomTray);
      instance.SetNewArray(&newArray_StBTofGeomTray);
      instance.SetDelete(&delete_StBTofGeomTray);
      instance.SetDeleteArray(&deleteArray_StBTofGeomTray);
      instance.SetDestructor(&destruct_StBTofGeomTray);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StBTofGeomTray*)
   {
      return GenerateInitInstanceLocal((::StBTofGeomTray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofGeomTray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StBTofGeomSensor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofGeomSensor(void *p = 0);
   static void *newArray_StBTofGeomSensor(Long_t size, void *p);
   static void delete_StBTofGeomSensor(void *p);
   static void deleteArray_StBTofGeomSensor(void *p);
   static void destruct_StBTofGeomSensor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofGeomSensor*)
   {
      ::StBTofGeomSensor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofGeomSensor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofGeomSensor", ::StBTofGeomSensor::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StBTofGeometry.h", 216,
                  typeid(::StBTofGeomSensor), DefineBehavior(ptr, ptr),
                  &::StBTofGeomSensor::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofGeomSensor) );
      instance.SetNew(&new_StBTofGeomSensor);
      instance.SetNewArray(&newArray_StBTofGeomSensor);
      instance.SetDelete(&delete_StBTofGeomSensor);
      instance.SetDeleteArray(&deleteArray_StBTofGeomSensor);
      instance.SetDestructor(&destruct_StBTofGeomSensor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StBTofGeomSensor*)
   {
      return GenerateInitInstanceLocal((::StBTofGeomSensor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofGeomSensor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StBTofGeometry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofGeometry(void *p = 0);
   static void *newArray_StBTofGeometry(Long_t size, void *p);
   static void delete_StBTofGeometry(void *p);
   static void deleteArray_StBTofGeometry(void *p);
   static void destruct_StBTofGeometry(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofGeometry*)
   {
      ::StBTofGeometry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofGeometry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofGeometry", ::StBTofGeometry::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StBTofGeometry.h", 288,
                  typeid(::StBTofGeometry), DefineBehavior(ptr, ptr),
                  &::StBTofGeometry::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofGeometry) );
      instance.SetNew(&new_StBTofGeometry);
      instance.SetNewArray(&newArray_StBTofGeometry);
      instance.SetDelete(&delete_StBTofGeometry);
      instance.SetDeleteArray(&deleteArray_StBTofGeometry);
      instance.SetDestructor(&destruct_StBTofGeometry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StBTofGeometry*)
   {
      return GenerateInitInstanceLocal((::StBTofGeometry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofGeometry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StBTofTables_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StBTofTables(void *p = 0);
   static void *newArray_StBTofTables(Long_t size, void *p);
   static void delete_StBTofTables(void *p);
   static void deleteArray_StBTofTables(void *p);
   static void destruct_StBTofTables(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StBTofTables*)
   {
      ::StBTofTables *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StBTofTables >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StBTofTables", ::StBTofTables::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StBTofTables.h", 28,
                  typeid(::StBTofTables), DefineBehavior(ptr, ptr),
                  &::StBTofTables::Dictionary, isa_proxy, 4,
                  sizeof(::StBTofTables) );
      instance.SetNew(&new_StBTofTables);
      instance.SetNewArray(&newArray_StBTofTables);
      instance.SetDelete(&delete_StBTofTables);
      instance.SetDeleteArray(&deleteArray_StBTofTables);
      instance.SetDestructor(&destruct_StBTofTables);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StBTofTables*)
   {
      return GenerateInitInstanceLocal((::StBTofTables*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StBTofTables*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StV0TofCorrection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StV0TofCorrection(void *p = 0);
   static void *newArray_StV0TofCorrection(Long_t size, void *p);
   static void delete_StV0TofCorrection(void *p);
   static void deleteArray_StV0TofCorrection(void *p);
   static void destruct_StV0TofCorrection(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StV0TofCorrection*)
   {
      ::StV0TofCorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StV0TofCorrection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StV0TofCorrection", ::StV0TofCorrection::Class_Version(), ".sl64_gcc447/obj/StRoot/StBTofUtil/StV0TofCorrection.h", 70,
                  typeid(::StV0TofCorrection), DefineBehavior(ptr, ptr),
                  &::StV0TofCorrection::Dictionary, isa_proxy, 4,
                  sizeof(::StV0TofCorrection) );
      instance.SetNew(&new_StV0TofCorrection);
      instance.SetNewArray(&newArray_StV0TofCorrection);
      instance.SetDelete(&delete_StV0TofCorrection);
      instance.SetDeleteArray(&deleteArray_StV0TofCorrection);
      instance.SetDestructor(&destruct_StV0TofCorrection);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StV0TofCorrection*)
   {
      return GenerateInitInstanceLocal((::StV0TofCorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StV0TofCorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StBTofNode::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofNode::Class_Name()
{
   return "StBTofNode";
}

//______________________________________________________________________________
const char *StBTofNode::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofNode::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofNode::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofNode::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofNode*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StBTofGeomTray::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofGeomTray::Class_Name()
{
   return "StBTofGeomTray";
}

//______________________________________________________________________________
const char *StBTofGeomTray::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomTray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofGeomTray::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomTray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofGeomTray::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomTray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofGeomTray::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomTray*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StBTofGeomSensor::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofGeomSensor::Class_Name()
{
   return "StBTofGeomSensor";
}

//______________________________________________________________________________
const char *StBTofGeomSensor::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomSensor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofGeomSensor::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomSensor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofGeomSensor::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomSensor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofGeomSensor::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeomSensor*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StBTofGeometry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofGeometry::Class_Name()
{
   return "StBTofGeometry";
}

//______________________________________________________________________________
const char *StBTofGeometry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeometry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofGeometry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeometry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofGeometry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeometry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofGeometry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofGeometry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StBTofTables::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StBTofTables::Class_Name()
{
   return "StBTofTables";
}

//______________________________________________________________________________
const char *StBTofTables::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofTables*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StBTofTables::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StBTofTables*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StBTofTables::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofTables*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StBTofTables::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StBTofTables*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StV0TofCorrection::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StV0TofCorrection::Class_Name()
{
   return "StV0TofCorrection";
}

//______________________________________________________________________________
const char *StV0TofCorrection::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StV0TofCorrection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StV0TofCorrection::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StV0TofCorrection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StV0TofCorrection::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StV0TofCorrection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StV0TofCorrection::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StV0TofCorrection*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StBTofNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofNode.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofNode::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofNode::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofNode.
      TClass *R__cl = ::StBTofNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fView", &fView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pView", &pView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mMasterNode", &mMasterNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTransMRS[3]", mTransMRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mRotMRS[9]", mRotMRS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTransFlag", &mTransFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEtaMin", &mEtaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mEtaMax", &mEtaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiMin", &mPhiMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mPhiMax", &mPhiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAlign[3]", mAlign);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StBTofNode(void *p) {
      return  p ? new(p) ::StBTofNode : new ::StBTofNode;
   }
   static void *newArray_StBTofNode(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofNode[nElements] : new ::StBTofNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofNode(void *p) {
      delete ((::StBTofNode*)p);
   }
   static void deleteArray_StBTofNode(void *p) {
      delete [] ((::StBTofNode*)p);
   }
   static void destruct_StBTofNode(void *p) {
      typedef ::StBTofNode current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StBTofNode

//______________________________________________________________________________
void StBTofGeomTray::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofGeomTray.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofGeomTray::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofGeomTray::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofGeomTray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofGeomTray.
      TClass *R__cl = ::StBTofGeomTray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrayIndex", &mTrayIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTOHIndex", &mBTOHIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSectorsInBTOH", &mSectorsInBTOH);
      StBTofNode::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StBTofGeomTray(void *p) {
      return  p ? new(p) ::StBTofGeomTray : new ::StBTofGeomTray;
   }
   static void *newArray_StBTofGeomTray(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofGeomTray[nElements] : new ::StBTofGeomTray[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofGeomTray(void *p) {
      delete ((::StBTofGeomTray*)p);
   }
   static void deleteArray_StBTofGeomTray(void *p) {
      delete [] ((::StBTofGeomTray*)p);
   }
   static void destruct_StBTofGeomTray(void *p) {
      typedef ::StBTofGeomTray current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StBTofGeomTray

//______________________________________________________________________________
void StBTofGeomSensor::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofGeomSensor.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofGeomSensor::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofGeomSensor::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofGeomSensor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofGeomSensor.
      TClass *R__cl = ::StBTofGeomSensor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mModuleIndex", &mModuleIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCellY[7]", mCellY);
      StBTofNode::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StBTofGeomSensor(void *p) {
      return  p ? new(p) ::StBTofGeomSensor : new ::StBTofGeomSensor;
   }
   static void *newArray_StBTofGeomSensor(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofGeomSensor[nElements] : new ::StBTofGeomSensor[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofGeomSensor(void *p) {
      delete ((::StBTofGeomSensor*)p);
   }
   static void deleteArray_StBTofGeomSensor(void *p) {
      delete [] ((::StBTofGeomSensor*)p);
   }
   static void destruct_StBTofGeomSensor(void *p) {
      typedef ::StBTofGeomSensor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StBTofGeomSensor

//______________________________________________________________________________
void StBTofGeometry::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofGeometry.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofGeometry::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofGeometry::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofGeometry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofGeometry.
      TClass *R__cl = ::StBTofGeometry::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mGeoNamed", &mGeoNamed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mTopNode", &mTopNode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mRootFile", &mRootFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mSectorsInBTOH", &mSectorsInBTOH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mNValidTrays", &mNValidTrays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mModulesInTray", &mModulesInTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mCellsInModule", &mCellsInModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mInitFlag", &mInitFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mStarHall", &mStarHall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofConf", &mBTofConf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBTofTray[120]", &mBTofTray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mBTofSensor[120][32]", &mBTofSensor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIsMC", &mIsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mAlignFile", (void*)&mAlignFile);
      R__insp.InspectMember("string", (void*)&mAlignFile, "mAlignFile.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrayX0[120]", mTrayX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrayY0[120]", mTrayY0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mTrayZ0[120]", mTrayZ0);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StBTofGeometry(void *p) {
      return  p ? new(p) ::StBTofGeometry : new ::StBTofGeometry;
   }
   static void *newArray_StBTofGeometry(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofGeometry[nElements] : new ::StBTofGeometry[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofGeometry(void *p) {
      delete ((::StBTofGeometry*)p);
   }
   static void deleteArray_StBTofGeometry(void *p) {
      delete [] ((::StBTofGeometry*)p);
   }
   static void destruct_StBTofGeometry(void *p) {
      typedef ::StBTofGeometry current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StBTofGeometry

//______________________________________________________________________________
void StBTofTables::Streamer(TBuffer &R__b)
{
   // Stream an object of class StBTofTables.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StBTofTables::Class(),this);
   } else {
      R__b.WriteClassBuffer(StBTofTables::Class(),this);
   }
}

//______________________________________________________________________________
void StBTofTables::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StBTofTables.
      TClass *R__cl = ::StBTofTables::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofTrayConfig[120]", mBTofTrayConfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBTofStatus[120][32][6]", mBTofStatus);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StBTofTables(void *p) {
      return  p ? new(p) ::StBTofTables : new ::StBTofTables;
   }
   static void *newArray_StBTofTables(Long_t nElements, void *p) {
      return p ? new(p) ::StBTofTables[nElements] : new ::StBTofTables[nElements];
   }
   // Wrapper around operator delete
   static void delete_StBTofTables(void *p) {
      delete ((::StBTofTables*)p);
   }
   static void deleteArray_StBTofTables(void *p) {
      delete [] ((::StBTofTables*)p);
   }
   static void destruct_StBTofTables(void *p) {
      typedef ::StBTofTables current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StBTofTables

//______________________________________________________________________________
void StV0TofCorrection::Streamer(TBuffer &R__b)
{
   // Stream an object of class StV0TofCorrection.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StV0TofCorrection::Class(),this);
   } else {
      R__b.WriteClassBuffer(StV0TofCorrection::Class(),this);
   }
}

//______________________________________________________________________________
void StV0TofCorrection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StV0TofCorrection.
      TClass *R__cl = ::StV0TofCorrection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clight", &clight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cleared", &cleared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cleared2", &cleared2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NrDecays", &NrDecays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vectors3D", &Vectors3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tracks", &tracks);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StV0TofCorrection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StV0TofCorrection : new ::StV0TofCorrection;
   }
   static void *newArray_StV0TofCorrection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StV0TofCorrection[nElements] : new ::StV0TofCorrection[nElements];
   }
   // Wrapper around operator delete
   static void delete_StV0TofCorrection(void *p) {
      delete ((::StV0TofCorrection*)p);
   }
   static void deleteArray_StV0TofCorrection(void *p) {
      delete [] ((::StV0TofCorrection*)p);
   }
   static void destruct_StV0TofCorrection(void *p) {
      typedef ::StV0TofCorrection current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StV0TofCorrection

/********************************************************
* .sl64_gcc447/obj/StRoot/StBTofUtil/StBTofUtil_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStBTofUtil_Cint();

extern "C" void G__set_cpp_environmentStBTofUtil_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StBTofGeometry.h");
  G__add_compiledheader("StBTofTables.h");
  G__add_compiledheader("StV0TofCorrection.h");
  G__cpp_reset_tagtableStBTofUtil_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStBTofUtil_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StBTofNode */
static int G__StBTofUtil_Cint_581_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofNode[n];
     } else {
       p = new((void*) gvp) StBTofNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofNode;
     } else {
       p = new((void*) gvp) StBTofNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofNode*) G__getstructoffset())->GetfView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofNode*) G__getstructoffset())->GetpView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofNode*) G__getstructoffset())->GetTopNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofNode::DebugOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofNode::DebugOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) StBTofNode::IsDebugOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      StBTofNode::CalcMatrix((StBTofNode*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3])
, (StBTofNode*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      StBTofNode::CalcMatrix((StBTofNode*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofNode::ConvertPos((StBTofNode*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (StBTofNode*) G__int(libp->para[2]), (Double_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofNode*) G__getstructoffset())->Local2Master((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofNode*) G__getstructoffset())->Master2Local((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofNode*) G__getstructoffset())->GetShape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVectorD* pobj;
         StThreeVectorD xobj = ((StBTofNode*) G__getstructoffset())->YZPlaneNormal();
         pobj = new StThreeVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorD* pobj;
         const StThreeVectorD xobj = ((const StBTofNode*) G__getstructoffset())->GetCenterPosition();
         pobj = new StThreeVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofNode*) G__getstructoffset())->GetEtaMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofNode*) G__getstructoffset())->GetEtaMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofNode*) G__getstructoffset())->GetPhiMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofNode*) G__getstructoffset())->GetPhiMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StBTofNode*) G__getstructoffset())->IsLocalPointIn((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StBTofNode*) G__getstructoffset())->IsGlobalPointIn(*(StThreeVectorD*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StBTofNode*) G__getstructoffset())->HelixCross(*(StHelixD*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(StThreeVectorD*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StBTofNode*) G__getstructoffset())->HelixCross(*(StHelixD*) libp->para[0].ref, *(Double_t*) G__Doubleref(&libp->para[1])
, *(StThreeVectorD*) libp->para[2].ref, *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofNode*) G__getstructoffset())->Align());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_581_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_581_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofNode* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofNode(*(StBTofNode*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofNode G__TStBTofNode;
static int G__StBTofUtil_Cint_581_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofNode*) (soff+(sizeof(StBTofNode)*i)))->~G__TStBTofNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofNode*) (soff))->~G__TStBTofNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StBTofGeomTray */
static int G__StBTofUtil_Cint_583_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofGeomTray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]), (StThreeVectorD*) G__int(libp->para[3])
, (TVolumePosition*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]), (StThreeVectorD*) G__int(libp->para[3])
, (TVolumePosition*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]), (StThreeVectorD*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]), (StThreeVectorD*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StBTofGeomTray(
(const Int_t) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (TVolumeView*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofGeomTray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomTray[n];
     } else {
       p = new((void*) gvp) StBTofGeomTray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomTray;
     } else {
       p = new((void*) gvp) StBTofGeomTray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StBTofGeomTray& obj = ((StBTofGeomTray*) G__getstructoffset())->operator=(*(StBTofGeomTray*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomTray::DebugOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomTray::DebugOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) StBTofGeomTray::IsDebugOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeomTray*) G__getstructoffset())->BTOHIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeomTray*) G__getstructoffset())->Index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofGeomTray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomTray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofGeomTray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomTray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeomTray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomTray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeomTray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomTray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_583_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeomTray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_583_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofGeomTray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofGeomTray(*(StBTofGeomTray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofGeomTray G__TStBTofGeomTray;
static int G__StBTofUtil_Cint_583_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofGeomTray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofGeomTray*) (soff+(sizeof(StBTofGeomTray)*i)))->~G__TStBTofGeomTray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofGeomTray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofGeomTray*) (soff))->~G__TStBTofGeomTray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StBTofGeomSensor */
static int G__StBTofUtil_Cint_584_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofGeomSensor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomSensor(
(TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (StThreeVectorD*) G__int(libp->para[2]), (TVolumePosition*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) StBTofGeomSensor(
(TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (StThreeVectorD*) G__int(libp->para[2]), (TVolumePosition*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomSensor(
(TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (StThreeVectorD*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) StBTofGeomSensor(
(TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1])
, (StThreeVectorD*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomSensor((TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StBTofGeomSensor((TVolumeView*) G__int(libp->para[0]), (TVolumeView*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofGeomSensor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomSensor[n];
     } else {
       p = new((void*) gvp) StBTofGeomSensor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeomSensor;
     } else {
       p = new((void*) gvp) StBTofGeomSensor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StBTofGeomSensor& obj = ((StBTofGeomSensor*) G__getstructoffset())->operator=(*(StBTofGeomSensor*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomSensor::DebugOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomSensor::DebugOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) StBTofGeomSensor::IsDebugOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeomSensor::GetCells());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeomSensor*) G__getstructoffset())->SetIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeomSensor*) G__getstructoffset())->Index());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofGeomSensor*) G__getstructoffset())->GetCellYMin((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StBTofGeomSensor*) G__getstructoffset())->GetCellYMax((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StBTofGeomSensor*) G__getstructoffset())->FindCellIndex((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeomSensor*) G__getstructoffset())->PrevCellIndex((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeomSensor*) G__getstructoffset())->NextCellIndex((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StThreeVectorD* pobj;
         StThreeVectorD xobj = ((StBTofGeomSensor*) G__getstructoffset())->GetCellPosition((const Int_t) G__int(libp->para[0]));
         pobj = new StThreeVectorD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofGeomSensor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomSensor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofGeomSensor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeomSensor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeomSensor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomSensor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeomSensor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeomSensor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_584_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeomSensor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_584_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofGeomSensor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofGeomSensor(*(StBTofGeomSensor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofGeomSensor G__TStBTofGeomSensor;
static int G__StBTofUtil_Cint_584_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofGeomSensor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofGeomSensor*) (soff+(sizeof(StBTofGeomSensor)*i)))->~G__TStBTofGeomSensor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofGeomSensor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofGeomSensor*) (soff))->~G__TStBTofGeomSensor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StBTofGeometry */
static int G__StBTofUtil_Cint_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofGeometry* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeometry((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) StBTofGeometry((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofGeometry((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) StBTofGeometry((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBTofGeometry[n];
       } else {
         p = new((void*) gvp) StBTofGeometry[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StBTofGeometry;
       } else {
         p = new((void*) gvp) StBTofGeometry;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsBSEC((TVolume*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsBTRA((TVolume*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsBRMD((TVolume*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StBTofGeometry*) G__getstructoffset())->ContainOthers((TVolume*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) StBTofGeometry::LackThis((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeometry::DebugOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeometry::DebugOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) StBTofGeometry::IsDebugOn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeometry*) G__getstructoffset())->SetMCOn();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeometry*) G__getstructoffset())->SetMCOff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StBTofGeometry*) G__getstructoffset())->SetAlignFile((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StBTofGeometry*) G__getstructoffset())->SetAlignFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeometry*) G__getstructoffset())->Init((StMaker*) G__int(libp->para[0]), (TVolume*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeometry*) G__getstructoffset())->InitFromStar((TVolume*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsInitDone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsCellValid((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsSensorValid((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->IsTrayValid((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcCellId((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcCellId((const Int_t) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcSensorId((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcSensorId((const Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->PrevCellId((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->NextCellId((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcCellId((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CalcCellId((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const StBTofGeometry*) G__getstructoffset())->DecodeVolumeId((const Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->DecodeSensorId((const Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofGeometry*) G__getstructoffset())->DecodeCellId((const Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->GetCellIndex((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CellsInModule((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CellsInModule((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CellsInModule());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->ModulesInTray((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->ModulesInTray());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->Trays());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((StBTofGeometry*) G__getstructoffset())->GeoRootFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetTopNode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomCell((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomSensor((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomSensor((const Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomTray((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomTray());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomTrayAt((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const StBTofGeometry*) G__getstructoffset())->GetGeomTrayAt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->GetTrayIndexAt((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->GetTrayIndexAt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->GetAtOfTray((const Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->GetAtOfTray());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofGeometry*) G__getstructoffset())->CellIdPointIn(*(StThreeVectorD*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofGeometry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeometry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofGeometry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofGeometry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofGeometry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeometry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeometry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofGeometry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_585_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofGeometry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_585_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofGeometry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofGeometry(*(StBTofGeometry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofGeometry G__TStBTofGeometry;
static int G__StBTofUtil_Cint_585_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofGeometry*) (soff+(sizeof(StBTofGeometry)*i)))->~G__TStBTofGeometry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofGeometry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofGeometry*) (soff))->~G__TStBTofGeometry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StBTofTables */
static int G__StBTofUtil_Cint_597_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofTables* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofTables[n];
     } else {
       p = new((void*) gvp) StBTofTables[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StBTofTables;
     } else {
       p = new((void*) gvp) StBTofTables;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofTables*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofTables*) G__getstructoffset())->loadTables((StMaker*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const StBTofTables*) G__getstructoffset())->trayValid((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StBTofTables*) G__getstructoffset())->status((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StBTofTables::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofTables::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StBTofTables::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StBTofTables::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StBTofTables*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofTables::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofTables::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StBTofTables::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_597_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StBTofTables::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_597_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StBTofTables* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StBTofTables(*(StBTofTables*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StBTofTables G__TStBTofTables;
static int G__StBTofUtil_Cint_597_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StBTofTables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StBTofTables*) (soff+(sizeof(StBTofTables)*i)))->~G__TStBTofTables();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StBTofTables*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StBTofTables*) (soff))->~G__TStBTofTables();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StBTofUtil_Cint_597_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StBTofTables* dest = (StBTofTables*) G__getstructoffset();
   *dest = *(StBTofTables*) libp->para[0].ref;
   const StBTofTables& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StV0TofCorrection */
static int G__StBTofUtil_Cint_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StV0TofCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StV0TofCorrection[n];
     } else {
       p = new((void*) gvp) StV0TofCorrection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StV0TofCorrection;
     } else {
       p = new((void*) gvp) StV0TofCorrection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StInlineContainer<StThreeVectorD>* pobj;
         StInlineContainer<StThreeVectorD> xobj = ((StV0TofCorrection*) G__getstructoffset())->setVectors3D(*((const StThreeVectorD*) G__int(libp->para[0])));
         pobj = new StInlineContainer<StThreeVectorD>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StInlineContainer<StLorentzVectorD>* pobj;
         StInlineContainer<StLorentzVectorD> xobj = ((StV0TofCorrection*) G__getstructoffset())->setMotherTracks(*((const StLorentzVectorD*) G__int(libp->para[0])));
         pobj = new StInlineContainer<StLorentzVectorD>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 103, (long) ((StV0TofCorrection*) G__getstructoffset())->correctBeta(*(StPhysicalHelixD*) libp->para[0].ref, *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(string*) libp->para[4].ref));
      break;
   case 4:
      G__letint(result7, 103, (long) ((StV0TofCorrection*) G__getstructoffset())->correctBeta(*(StPhysicalHelixD*) libp->para[0].ref, *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((StV0TofCorrection*) G__getstructoffset())->correctBeta(*(StPhysicalHelixD*) libp->para[0].ref, *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StV0TofCorrection*) G__getstructoffset())->clearContainers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StV0TofCorrection*) G__getstructoffset())->calcM2(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StV0TofCorrection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StV0TofCorrection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StV0TofCorrection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StV0TofCorrection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StV0TofCorrection*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StV0TofCorrection*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StV0TofCorrection*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StV0TofCorrection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StV0TofCorrection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StV0TofCorrection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StV0TofCorrection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StBTofUtil_Cint_626_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StV0TofCorrection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StBTofUtil_Cint_626_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StV0TofCorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StV0TofCorrection(*(StV0TofCorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StV0TofCorrection G__TStV0TofCorrection;
static int G__StBTofUtil_Cint_626_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StV0TofCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StV0TofCorrection*) (soff+(sizeof(StV0TofCorrection)*i)))->~G__TStV0TofCorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StV0TofCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StV0TofCorrection*) (soff))->~G__TStV0TofCorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StBTofUtil_Cint_626_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StV0TofCorrection* dest = (StV0TofCorrection*) G__getstructoffset();
   *dest = *(StV0TofCorrection*) libp->para[0].ref;
   const StV0TofCorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StBTofNode */

/* StBTofGeomTray */

/* StBTofGeomSensor */

/* StBTofGeometry */

/* StBTofTables */

/* StV0TofCorrection */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStBTofUtil_Cint {
 public:
  G__Sizep2memfuncStBTofUtil_Cint(): p(&G__Sizep2memfuncStBTofUtil_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStBTofUtil_Cint::*p)();
};

size_t G__get_sizep2memfuncStBTofUtil_Cint()
{
  G__Sizep2memfuncStBTofUtil_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStBTofUtil_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode))) {
     StBTofNode *G__Lderived;
     G__Lderived=(StBTofNode*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray))) {
     StBTofGeomTray *G__Lderived;
     G__Lderived=(StBTofGeomTray*)0x1000;
     {
       StBTofNode *G__Lpbase=(StBTofNode*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray),G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor))) {
     StBTofGeomSensor *G__Lderived;
     G__Lderived=(StBTofGeomSensor*)0x1000;
     {
       StBTofNode *G__Lpbase=(StBTofNode*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor),G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry))) {
     StBTofGeometry *G__Lderived;
     G__Lderived=(StBTofGeometry*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables))) {
     StBTofTables *G__Lderived;
     G__Lderived=(StBTofTables*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables),G__get_linked_tagnum(&G__StBTofUtil_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStBTofUtil_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StThreeVectorD",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StHelixD",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StHelix),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StPhysicalHelixD",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StPhysicalHelix),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StLorentzVectorD",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StLorentzVectorlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::pair<float,float> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::pair<float,float> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,pair<float,float> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,pair<float,float>,less<string> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StThreeVector<double> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StInlineContainer<StThreeVectorD>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StInlineContainer<StThreeVector<double> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StLorentzVector<double> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StInlineContainer<StLorentzVectorD>",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StInlineContainer<StLorentzVector<double> >",117,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StBTofNode */
static void G__setup_memvarStBTofNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode));
   { StBTofNode *p; p=(StBTofNode*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView),-1,-1,2,"fView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumePosition),-1,-1,2,"pView=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView),-1,-1,2,"mMasterNode=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTransMRS[3]=",0,"Translate vector in MRS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mRotMRS[9]=",0,"RotateMatrix from MRS to this");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mTransFlag=",0,"Flag, kTRUE=if translation/matrix updated");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mEtaMin=",0,"minimum covered Eta in MRS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mEtaMax=",0,"maximum covered Eta in MRS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mPhiMin=",0,"minimum covered Phi in MRS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mPhiMax=",0,"maximum covered Phi in MRS");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mAlign[3]=",0,"! Alignment parameters");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"mDebug=",0,"!Control message printing of this class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StBTofGeomTray */
static void G__setup_memvarStBTofGeomTray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray));
   { StBTofGeomTray *p; p=(StBTofGeomTray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mTrayIndex=",0,"Tray Index number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mBTOHIndex=",0,"BTOH Index number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mSectorsInBTOH=",0,"number of sectors in one half TOF");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"mDebug=",0,"!Control message printing of this class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StBTofGeomSensor */
static void G__setup_memvarStBTofGeomSensor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor));
   { StBTofGeomSensor *p; p=(StBTofGeomSensor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mModuleIndex=",0,"Module Index number");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mCells=6LL",0,"!Cells in one module");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mCellY[7]=",0,"Y Range of cells");
   G__memvar_setup((void*)0,100,0,1,-1,G__defined_typename("Double_t"),-2,4,"mSensorDy=",0,"= 10.35;   // Actual module length;");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"mDebug=",0,"!Control message printing of this class");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StBTofGeometry */
static void G__setup_memvarStBTofGeometry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry));
   { StBTofGeometry *p; p=(StBTofGeometry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TNamed),-1,-1,4,"mGeoNamed=",0,"!Geometry to copy from");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNTrays=120LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"mNModules=32LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView),-1,-1,2,"mTopNode=",0,"top TNode as MRS");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"mRootFile=",0,"!the root file of geometry");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mSectorsInBTOH=",0,"number of sectors in one half TOF");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mNValidTrays=",0,"amount of TOF trays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mModulesInTray=",0,"number of modules in a tray");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mCellsInModule=",0,"number of cell in a module");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mInitFlag=",0,"flag of initialization, kTRUE if done");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolume),-1,-1,2,"mStarHall=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mBTofConf=",0,"configuration for tray/full (0/1) tof");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray),-1,-1,2,"mBTofTray[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor),-1,-1,2,"mBTofSensor[120][32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"mIsMC=",0,"!Control MC input (ignore alignment corrections)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"mDebug=",0,"!Control message printing of this class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_string),-1,-1,2,"mAlignFile=",0,"! filename for alignment input");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,2,"sectorPref=",0,"= \"BSEC\";");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,2,"trayPref=",0,"= \"BTRA\";");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,2,"senPref=",0,"= \"BRMD\";");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTrayX0[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTrayY0[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"mTrayZ0[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StBTofTables */
static void G__setup_memvarStBTofTables(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables));
   { StBTofTables *p; p=(StBTofTables*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"mNTray=120LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"mNModule=32LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"mNCell=6LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,2,"mNChanMax=24000LL",0,"/ A large number for total channels");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mBTofTrayConfig[120]=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mBTofStatus[120][32][6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StV0TofCorrection */
static void G__setup_memvarStV0TofCorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection));
   { StV0TofCorrection *p; p=(StV0TofCorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"clight=",0,"!< speed of light in cm/ns");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"cleared=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"cleared2=",0,"!< status of containers (cleared?) ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NrDecays=",0,"!< number of decays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR),G__defined_typename("StInlineContainer<StThreeVectorD>"),-1,4,"Vectors3D=",0,"!< container for 3d-vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR),G__defined_typename("StInlineContainer<StLorentzVectorD>"),-1,4,"tracks=",0,"!< container for mother tracks");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&StV0TofCorrection::mM2CutMap),117,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR),G__defined_typename("M2CutType"),-2,1,"mM2CutMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStBTofUtil_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStBTofNode(void) {
   /* StBTofNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode));
   G__memfunc_setup("StBTofNode",952,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode), -1, 0, 4, 1, 2, 0, 
"U 'TVolumeView' - 0 - element U 'TVolumeView' - 0 - top "
"U 'StThreeVector<double>' 'StThreeVectorD' 0 '0' align U 'TVolumePosition' - 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode), -1, 1, 1, 1, 2, 0, "u 'StBTofNode' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateMatrix",1240,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildMembers",1211,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StBTofNode",952,G__StBTofUtil_Cint_581_0_5, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetfView",801,G__StBTofUtil_Cint_581_0_6, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetpView",811,G__StBTofUtil_Cint_581_0_7, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumePosition), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTopNode",985,G__StBTofUtil_Cint_581_0_8, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DebugOn",676,G__StBTofUtil_Cint_581_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofNode::DebugOn) ), 0);
   G__memfunc_setup("DebugOff",770,G__StBTofUtil_Cint_581_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofNode::DebugOff) ), 0);
   G__memfunc_setup("IsDebugOn",864,G__StBTofUtil_Cint_581_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&StBTofNode::IsDebugOn) ), 0);
   G__memfunc_setup("CalcMatrix",1000,G__StBTofUtil_Cint_581_0_12, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'StBTofNode' - 0 - son D - 'Double_t' 0 - align "
"D - 'Double_t' 0 - trans D - 'Double_t' 0 - rot "
"U 'StBTofNode' - 0 '0' mother", (char*)NULL, (void*) G__func2void( (void (*)(StBTofNode*, Double_t*, Double_t*, Double_t*, StBTofNode*))(&StBTofNode::CalcMatrix) ), 0);
   G__memfunc_setup("ConvertPos",1043,G__StBTofUtil_Cint_581_0_13, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'StBTofNode' - 0 - from D - 'Double_t' 10 - pos_from "
"U 'StBTofNode' - 0 - to D - 'Double_t' 0 - pos_to", (char*)NULL, (void*) G__func2void( (void (*)(StBTofNode*, const Double_t*, StBTofNode*, Double_t*))(&StBTofNode::ConvertPos) ), 0);
   G__memfunc_setup("Local2Master",1161,G__StBTofUtil_Cint_581_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - local D - 'Double_t' 0 - master", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Master2Local",1161,G__StBTofUtil_Cint_581_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - 'Double_t' 10 - master D - 'Double_t' 0 - local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShape",785,G__StBTofUtil_Cint_581_0_16, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TShape), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("YZPlaneNormal",1292,G__StBTofUtil_Cint_581_0_17, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR), G__defined_typename("StThreeVectorD"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCenterPosition",1750,G__StBTofUtil_Cint_581_0_18, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR), G__defined_typename("StThreeVectorD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtaMin",862,G__StBTofUtil_Cint_581_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEtaMax",864,G__StBTofUtil_Cint_581_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiMin",869,G__StBTofUtil_Cint_581_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiMax",871,G__StBTofUtil_Cint_581_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLocalPointIn",1384,G__StBTofUtil_Cint_581_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 10 - x d - 'Double_t' 10 - y "
"d - 'Double_t' 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGlobalPointIn",1486,G__StBTofUtil_Cint_581_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'StThreeVector<double>' 'StThreeVectorD' 11 - global", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HelixCross",1028,G__StBTofUtil_Cint_581_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"u 'StHelix' 'StHelixD' 11 - helix d - 'Double_t' 1 - pathLen "
"u 'StThreeVector<double>' 'StThreeVectorD' 1 - cross", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HelixCross",1028,G__StBTofUtil_Cint_581_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"u 'StHelix' 'StHelixD' 11 - helix d - 'Double_t' 1 - pathLen "
"u 'StThreeVector<double>' 'StThreeVectorD' 1 - cross d - 'Double_t' 1 - theta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Align",491,G__StBTofUtil_Cint_581_0_27, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR), G__defined_typename("StThreeVectorD"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_581_0_29, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_581_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_581_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_581_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_581_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_581_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_581_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_581_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_581_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofNode::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofNode", 952, G__StBTofUtil_Cint_581_0_41, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofNode), -1, 0, 1, 1, 1, 0, "u 'StBTofNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofNode", 1078, G__StBTofUtil_Cint_581_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStBTofGeomTray(void) {
   /* StBTofGeomTray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray));
   G__memfunc_setup("StBTofGeomTray",1370,G__StBTofUtil_Cint_583_0_1, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 10 - ibtoh U 'TVolumeView' - 0 - sector "
"U 'TVolumeView' - 0 - top U 'StThreeVector<double>' 'StThreeVectorD' 0 '0' align "
"U 'TVolumePosition' - 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StBTofGeomTray",1370,G__StBTofUtil_Cint_583_0_2, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StBTofUtil_Cint_583_0_3, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 1, 1, 1, 1, 0, "u 'StBTofGeomTray' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DebugOn",676,G__StBTofUtil_Cint_583_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomTray::DebugOn) ), 0);
   G__memfunc_setup("DebugOff",770,G__StBTofUtil_Cint_583_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomTray::DebugOff) ), 0);
   G__memfunc_setup("IsDebugOn",864,G__StBTofUtil_Cint_583_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&StBTofGeomTray::IsDebugOn) ), 0);
   G__memfunc_setup("BTOHIndex",805,G__StBTofUtil_Cint_583_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Index",504,G__StBTofUtil_Cint_583_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_583_0_10, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofGeomTray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_583_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomTray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_583_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofGeomTray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_583_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomTray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_583_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_583_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomTray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_583_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeomTray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_583_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomTray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_583_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeomTray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofGeomTray", 1370, G__StBTofUtil_Cint_583_0_22, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 0, 1, 1, 1, 0, "u 'StBTofGeomTray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofGeomTray", 1496, G__StBTofUtil_Cint_583_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStBTofGeomSensor(void) {
   /* StBTofGeomSensor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor));
   G__memfunc_setup("CreateGeomCells",1487,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StBTofGeomSensor",1588,G__StBTofUtil_Cint_584_0_2, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 0, 4, 1, 1, 0, 
"U 'TVolumeView' - 0 - element U 'TVolumeView' - 0 - top "
"U 'StThreeVector<double>' 'StThreeVectorD' 0 '0' align U 'TVolumePosition' - 0 '0' pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StBTofGeomSensor",1588,G__StBTofUtil_Cint_584_0_3, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__StBTofUtil_Cint_584_0_4, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 1, 1, 1, 1, 0, "u 'StBTofGeomSensor' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DebugOn",676,G__StBTofUtil_Cint_584_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomSensor::DebugOn) ), 0);
   G__memfunc_setup("DebugOff",770,G__StBTofUtil_Cint_584_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomSensor::DebugOff) ), 0);
   G__memfunc_setup("IsDebugOn",864,G__StBTofUtil_Cint_584_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&StBTofGeomSensor::IsDebugOn) ), 0);
   G__memfunc_setup("GetCells",787,G__StBTofUtil_Cint_584_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&StBTofGeomSensor::GetCells) ), 0);
   G__memfunc_setup("SetIndex",804,G__StBTofUtil_Cint_584_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - imod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Index",504,G__StBTofUtil_Cint_584_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellYMin",1053,G__StBTofUtil_Cint_584_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellYMax",1055,G__StBTofUtil_Cint_584_0_12, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindCellIndex",1273,G__StBTofUtil_Cint_584_0_13, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "D - 'Double_t' 10 - local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrevCellIndex",1301,G__StBTofUtil_Cint_584_0_14, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextCellIndex",1303,G__StBTofUtil_Cint_584_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellPosition",1525,G__StBTofUtil_Cint_584_0_16, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR), G__defined_typename("StThreeVectorD"), 0, 1, 1, 1, 0, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_584_0_18, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofGeomSensor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_584_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomSensor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_584_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofGeomSensor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_584_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeomSensor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_584_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_584_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomSensor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_584_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeomSensor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_584_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeomSensor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_584_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeomSensor::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofGeomSensor", 1588, G__StBTofUtil_Cint_584_0_30, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 0, 1, 1, 1, 0, "u 'StBTofGeomSensor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofGeomSensor", 1714, G__StBTofUtil_Cint_584_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStBTofGeometry(void) {
   /* StBTofGeometry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry));
   G__memfunc_setup("StBTofGeometry",1406,G__StBTofUtil_Cint_585_0_1, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry), -1, 0, 2, 1, 1, 0, 
"C - - 10 '\"btofGeo\"' name C - - 10 '\"Simplified BTof Geometry\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBSEC",473,G__StBTofUtil_Cint_585_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TVolume' - 10 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBTRA",485,G__StBTofUtil_Cint_585_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TVolume' - 10 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBRMD",481,G__StBTofUtil_Cint_585_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "U 'TVolume' - 10 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ContainOthers",1345,G__StBTofUtil_Cint_585_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'TVolume' - 0 - element", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LackThis",787,G__StBTofUtil_Cint_585_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - - 10 - fromWhere", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*))(&StBTofGeometry::LackThis) ), 0);
   G__memfunc_setup("DebugOn",676,G__StBTofUtil_Cint_585_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeometry::DebugOn) ), 0);
   G__memfunc_setup("DebugOff",770,G__StBTofUtil_Cint_585_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeometry::DebugOff) ), 0);
   G__memfunc_setup("IsDebugOn",864,G__StBTofUtil_Cint_585_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&StBTofGeometry::IsDebugOn) ), 0);
   G__memfunc_setup("SetMCOn",633,G__StBTofUtil_Cint_585_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCOff",727,G__StBTofUtil_Cint_585_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlignFile",1175,G__StBTofUtil_Cint_585_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' infile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__StBTofUtil_Cint_585_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StMaker' - 0 - maker U 'TVolume' - 0 - starHall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitFromStar",1218,G__StBTofUtil_Cint_585_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVolume' - 0 - starHall", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInitDone",982,G__StBTofUtil_Cint_585_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCellValid",1068,G__StBTofUtil_Cint_585_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - icell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSensorValid",1318,G__StBTofUtil_Cint_585_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - imodule", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrayValid",1100,G__StBTofUtil_Cint_585_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcCellId",928,G__StBTofUtil_Cint_585_0_19, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - volumeId D - 'Double_t' 10 - local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcCellId",928,G__StBTofUtil_Cint_585_0_20, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - volumeId F - 'Float_t' 10 - local", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSensorId",1178,G__StBTofUtil_Cint_585_0_21, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - imodule i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrevCellId",970,G__StBTofUtil_Cint_585_0_22, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - cellId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextCellId",972,G__StBTofUtil_Cint_585_0_23, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - cellId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcCellId",928,G__StBTofUtil_Cint_585_0_24, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - icell i - 'Int_t' 10 - imodule "
"i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeVolumeId",1385,G__StBTofUtil_Cint_585_0_25, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - volumeId i - 'Int_t' 1 - imodule "
"i - 'Int_t' 1 - itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeSensorId",1387,G__StBTofUtil_Cint_585_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - sensorId i - 'Int_t' 1 - imodule "
"i - 'Int_t' 1 - itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DecodeCellId",1137,G__StBTofUtil_Cint_585_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - cellId i - 'Int_t' 1 - icell "
"i - 'Int_t' 1 - imodule i - 'Int_t' 1 - itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCellIndex",1176,G__StBTofUtil_Cint_585_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - cellId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CellsInModule",1296,G__StBTofUtil_Cint_585_0_29, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 '0' imodule i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ModulesInTray",1328,G__StBTofUtil_Cint_585_0_30, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Trays",531,G__StBTofUtil_Cint_585_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GeoRootFile",1087,G__StBTofUtil_Cint_585_0_32, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTopNode",985,G__StBTofUtil_Cint_585_0_34, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TVolumeView), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeomCell",1064,G__StBTofUtil_Cint_585_0_35, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - cellId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeomSensor",1314,G__StBTofUtil_Cint_585_0_36, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomSensor), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - imodule i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeomTray",1096,G__StBTofUtil_Cint_585_0_37, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeomTrayAt",1277,G__StBTofUtil_Cint_585_0_38, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeomTray), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrayIndexAt",1389,G__StBTofUtil_Cint_585_0_39, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 '0' idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAtOfTray",1066,G__StBTofUtil_Cint_585_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 '0' itray", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CellIdPointIn",1262,G__StBTofUtil_Cint_585_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'StThreeVector<double>' 'StThreeVectorD' 11 - point", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_585_0_42, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofGeometry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_585_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeometry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_585_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofGeometry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_585_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofGeometry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_585_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_585_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeometry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_585_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeometry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_585_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofGeometry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_585_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofGeometry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofGeometry", 1406, G__StBTofUtil_Cint_585_0_54, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofGeometry), -1, 0, 1, 1, 1, 0, "u 'StBTofGeometry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofGeometry", 1532, G__StBTofUtil_Cint_585_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStBTofTables(void) {
   /* StBTofTables */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables));
   G__memfunc_setup("StBTofTables",1165,G__StBTofUtil_Cint_597_0_1, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__StBTofUtil_Cint_597_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadTables",1019,G__StBTofUtil_Cint_597_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StMaker' - 0 - anyMaker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trayValid",944,G__StBTofUtil_Cint_597_0_4, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - trayId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__StBTofUtil_Cint_597_0_5, 105, -1, -1, 0, 3, 1, 1, 8, 
"i - - 0 - trayId i - - 0 - moduleId "
"i - - 0 - cellId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_597_0_6, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StBTofTables::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_597_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofTables::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_597_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StBTofTables::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_597_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StBTofTables::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_597_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_597_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofTables::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_597_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofTables::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_597_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StBTofTables::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_597_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StBTofTables::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StBTofTables", 1165, G__StBTofUtil_Cint_597_0_18, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables), -1, 0, 1, 1, 1, 0, "u 'StBTofTables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StBTofTables", 1291, G__StBTofUtil_Cint_597_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StBTofUtil_Cint_597_0_20, (int) ('u'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StBTofTables), -1, 1, 1, 1, 1, 0, "u 'StBTofTables' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStV0TofCorrection(void) {
   /* StV0TofCorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection));
   G__memfunc_setup("calcTof",700,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 4, 0, 
"u 'StLorentzVector<double>' 'StLorentzVectorD' 11 - - f - 'Float_t' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("inputOk",746,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cutOnMass2",975,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"f - 'Float_t' 11 - - u 'string' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createM2CutMap",1341,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR), G__defined_typename("M2CutType"), 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StV0TofCorrection",1678,G__StBTofUtil_Cint_626_0_5, 105, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection), -1, 0, 0, 1, 1, 0, "", "!< constructor", (void*) NULL, 0);
   G__memfunc_setup("setVectors3D",1193,G__StBTofUtil_Cint_626_0_6, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR), G__defined_typename("StInlineContainer<StThreeVectorD>"), 0, 1, 1, 1, 0, "u 'StThreeVector<double>' 'StThreeVectorD' 10 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMotherTracks",1571,G__StBTofUtil_Cint_626_0_7, 117, G__get_linked_tagnum(&G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR), G__defined_typename("StInlineContainer<StLorentzVectorD>"), 0, 1, 1, 1, 0, "u 'StLorentzVector<double>' 'StLorentzVectorD' 10 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correctBeta",1134,G__StBTofUtil_Cint_626_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 1, 0, 
"u 'StPhysicalHelix' 'StPhysicalHelixD' 11 - - f - 'Float_t' 11 - - "
"f - 'Float_t' 1 - - f - 'Float_t' 11 '-999.' MomentumA "
"u 'string' - 11 '\"\"' particle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearContainers",1565,G__StBTofUtil_Cint_626_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcM2",530,G__StBTofUtil_Cint_626_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 11 - mom f - 'Float_t' 11 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StBTofUtil_Cint_626_0_11, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StV0TofCorrection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StBTofUtil_Cint_626_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StV0TofCorrection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StBTofUtil_Cint_626_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StV0TofCorrection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StBTofUtil_Cint_626_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StV0TofCorrection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__StBTofUtil_Cint_626_0_15, 85, G__get_linked_tagnum(&G__StBTofUtil_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StBTofUtil_Cint_626_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StBTofUtil_Cint_626_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StBTofUtil_Cint_626_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StBTofUtil_Cint_626_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StV0TofCorrection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StBTofUtil_Cint_626_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StV0TofCorrection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StBTofUtil_Cint_626_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StV0TofCorrection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StBTofUtil_Cint_626_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StV0TofCorrection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StV0TofCorrection", 1678, G__StBTofUtil_Cint_626_0_23, (int) ('i'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection), -1, 0, 1, 1, 1, 0, "u 'StV0TofCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StV0TofCorrection", 1804, G__StBTofUtil_Cint_626_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StBTofUtil_Cint_626_0_25, (int) ('u'), G__get_linked_tagnum(&G__StBTofUtil_CintLN_StV0TofCorrection), -1, 1, 1, 1, 1, 0, "u 'StV0TofCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStBTofUtil_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStBTofUtil_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStBTofUtil_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StBTofUtil_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TShape = { "TShape" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StThreeVectorlEdoublegR = { "StThreeVector<double>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StHelix = { "StHelix" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TVolumePosition = { "TVolumePosition" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TVolume = { "TVolume" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TVolumeView = { "TVolumeView" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StBTofNode = { "StBTofNode" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StBTofGeomTray = { "StBTofGeomTray" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StBTofGeomSensor = { "StBTofGeomSensor" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StBTofGeometry = { "StBTofGeometry" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StBTofTables = { "StBTofTables" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StPhysicalHelix = { "StPhysicalHelix" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StLorentzVectorlEdoublegR = { "StLorentzVector<double>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR = { "map<string,pair<float,float>,less<string>,allocator<pair<const string,pair<float,float> > > >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StV0TofCorrection = { "StV0TofCorrection" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR = { "vector<StThreeVector<double>,allocator<StThreeVector<double> > >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StThreeVector<double>,allocator<StThreeVector<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR = { "StInlineContainer<StThreeVector<double>,vector<StThreeVector<double>,allocator<StThreeVector<double> > > >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR = { "vector<StLorentzVector<double>,allocator<StLorentzVector<double> > >" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<StLorentzVector<double>,allocator<StLorentzVector<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR = { "StInlineContainer<StLorentzVector<double>,vector<StLorentzVector<double>,allocator<StLorentzVector<double> > > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStBTofUtil_Cint() {
  G__StBTofUtil_CintLN_TClass.tagnum = -1 ;
  G__StBTofUtil_CintLN_TBuffer.tagnum = -1 ;
  G__StBTofUtil_CintLN_TMemberInspector.tagnum = -1 ;
  G__StBTofUtil_CintLN_TObject.tagnum = -1 ;
  G__StBTofUtil_CintLN_TNamed.tagnum = -1 ;
  G__StBTofUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_string.tagnum = -1 ;
  G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_TShape.tagnum = -1 ;
  G__StBTofUtil_CintLN_StThreeVectorlEdoublegR.tagnum = -1 ;
  G__StBTofUtil_CintLN_StHelix.tagnum = -1 ;
  G__StBTofUtil_CintLN_TVolumePosition.tagnum = -1 ;
  G__StBTofUtil_CintLN_TVolume.tagnum = -1 ;
  G__StBTofUtil_CintLN_TVolumeView.tagnum = -1 ;
  G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StBTofUtil_CintLN_StMaker.tagnum = -1 ;
  G__StBTofUtil_CintLN_StBTofNode.tagnum = -1 ;
  G__StBTofUtil_CintLN_StBTofGeomTray.tagnum = -1 ;
  G__StBTofUtil_CintLN_StBTofGeomSensor.tagnum = -1 ;
  G__StBTofUtil_CintLN_StBTofGeometry.tagnum = -1 ;
  G__StBTofUtil_CintLN_StBTofTables.tagnum = -1 ;
  G__StBTofUtil_CintLN_StPhysicalHelix.tagnum = -1 ;
  G__StBTofUtil_CintLN_StLorentzVectorlEdoublegR.tagnum = -1 ;
  G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_StV0TofCorrection.tagnum = -1 ;
  G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStBTofUtil_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_string);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TShape);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StThreeVectorlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StHelix);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TVolumePosition);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TVolume);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TVolumeView);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StBTofNode),sizeof(StBTofNode),-1,326912,"Virutal TNode for TOF geometry",G__setup_memvarStBTofNode,G__setup_memfuncStBTofNode);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StBTofGeomTray),sizeof(StBTofGeomTray),-1,326912,"Tray node in TOF geometry",G__setup_memvarStBTofGeomTray,G__setup_memfuncStBTofGeomTray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StBTofGeomSensor),sizeof(StBTofGeomSensor),-1,326912,"Module node in TOF geometry",G__setup_memvarStBTofGeomSensor,G__setup_memfuncStBTofGeomSensor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StBTofGeometry),sizeof(StBTofGeometry),-1,324864,"Simplified TOF Geometry",G__setup_memvarStBTofGeometry,G__setup_memfuncStBTofGeometry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StBTofTables),sizeof(StBTofTables),-1,292096,(char*)NULL,G__setup_memvarStBTofTables,G__setup_memfuncStBTofTables);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StPhysicalHelix);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StLorentzVectorlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_maplEstringcOpairlEfloatcOfloatgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOpairlEfloatcOfloatgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StV0TofCorrection),sizeof(StV0TofCorrection),-1,263424,(char*)NULL,G__setup_memvarStV0TofCorrection,G__setup_memfuncStV0TofCorrection);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_vectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StInlineContainerlEStThreeVectorlEdoublegRcOvectorlEStThreeVectorlEdoublegRcOallocatorlEStThreeVectorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_vectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_reverse_iteratorlEvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StBTofUtil_CintLN_StInlineContainerlEStLorentzVectorlEdoublegRcOvectorlEStLorentzVectorlEdoublegRcOallocatorlEStLorentzVectorlEdoublegRsPgRsPgRsPgR);
}
extern "C" void G__cpp_setupStBTofUtil_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStBTofUtil_Cint()");
  G__set_cpp_environmentStBTofUtil_Cint();
  G__cpp_setup_tagtableStBTofUtil_Cint();

  G__cpp_setup_inheritanceStBTofUtil_Cint();

  G__cpp_setup_typetableStBTofUtil_Cint();

  G__cpp_setup_memvarStBTofUtil_Cint();

  G__cpp_setup_memfuncStBTofUtil_Cint();
  G__cpp_setup_globalStBTofUtil_Cint();
  G__cpp_setup_funcStBTofUtil_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStBTofUtil_Cint();
  return;
}
class G__cpp_setup_initStBTofUtil_Cint {
  public:
    G__cpp_setup_initStBTofUtil_Cint() { G__add_setup_func("StBTofUtil_Cint",(G__incsetup)(&G__cpp_setupStBTofUtil_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStBTofUtil_Cint() { G__remove_setup_func("StBTofUtil_Cint"); }
};
G__cpp_setup_initStBTofUtil_Cint G__cpp_setup_initializerStBTofUtil_Cint;

